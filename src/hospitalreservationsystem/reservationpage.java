/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospitalreservationsystem;
import java.sql.*;


/**
 *
 * @author Lenovo
 */
public class reservationpage extends javax.swing.JFrame {

    /**
     * Creates new form reservationpage
     */
    private static String day="";
    private static String month="";
    private static String year="";
    private static String time="";
    private static String doctorname="";
    private static String doctorspecialization="";
    private static String code="";
     private static int flag1=0;
    private static int flag2=0;
   private static int flag3=0;
    private static int flag4=0;
    
   private static String patientusername="";
   private static String doctorusername="";
    
    public reservationpage() {
        initComponents();
    }
     public reservationpage(String u) {
        initComponents();
        patientusername=u;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        specializationlist = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        doctorslist = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        yearslist = new javax.swing.JComboBox<>();
        monthslist = new javax.swing.JComboBox<>();
        timelist = new javax.swing.JComboBox<>();
        dayslist = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        reservation = new javax.swing.JLabel();
        check = new javax.swing.JLabel();
        reservation2 = new javax.swing.JLabel();
        reservation3 = new javax.swing.JLabel();
        check1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hospitalreservationsystem/services.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("specialization");

        specializationlist.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        specializationlist.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select", "dentistry", "dermatology", "ear,nose and throat", "surgery", "internal medicine", "neurology", "obsterics and gynecology", "oncology", "ophthalmology", "orthopedics", "pediatrics" }));
        specializationlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specializationlistActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("doctor's name");

        doctorslist.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        doctorslist.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "doctor's name" }));

        jLabel4.setFont(new java.awt.Font("Lucida Calligraphy", 3, 18)); // NOI18N
        jLabel4.setText("choose your appointment time");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("year");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("month");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("day");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("time");

        yearslist.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        yearslist.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "year", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029" }));

        monthslist.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        monthslist.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "month", "january", "febraury", "march", "april", "may", "june", "july", "augist", "september", "october", "november", "december" }));
        monthslist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthslistActionPerformed(evt);
            }
        });

        timelist.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        timelist.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select", "9:00 am", "9:30 am", "10:00 am", "10:30 am", "11:00 am", "11:30 am", "12:00 pm", "12:30 pm", "1:00 9m", "1:30 pm", "2:00 pm", "2:30 pm", "3:00 pm" }));

        dayslist.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dayslist.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "day" }));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("confirm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        reservation.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        reservation.setForeground(new java.awt.Color(255, 0, 51));

        check.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        check.setForeground(new java.awt.Color(255, 0, 51));

        reservation2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        reservation2.setForeground(new java.awt.Color(255, 0, 51));

        reservation3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        reservation3.setForeground(new java.awt.Color(255, 0, 51));

        check1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        check1.setForeground(new java.awt.Color(255, 0, 51));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("return to home page");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setText("return to patient page");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(reservation, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGap(36, 36, 36)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(yearslist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(dayslist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(108, 108, 108))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(104, 104, 104)
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7)
                                    .addGap(124, 124, 124)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(timelist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addGap(40, 40, 40)))
                            .addGap(51, 51, 51))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGap(73, 73, 73)
                                    .addComponent(jButton1)
                                    .addGap(69, 69, 69)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(27, 27, 27)
                                            .addComponent(jButton2)
                                            .addGap(52, 52, 52)
                                            .addComponent(jButton3))
                                        .addComponent(reservation3, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGap(194, 194, 194)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(monthslist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(267, 267, 267))
                                            .addComponent(reservation2, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(specializationlist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(check, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGap(40, 40, 40)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(doctorslist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(check1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(44, 44, 44))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(specializationlist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(doctorslist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(check, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(check1, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                        .addGap(4, 4, 4)))
                .addGap(29, 29, 29)
                .addComponent(jLabel4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(yearslist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(monthslist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(timelist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dayslist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(reservation, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(reservation2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(reservation3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkdata(){
        reservation.setText("");
        reservation2.setText("");
         reservation3.setText("");
        check.setText("");
         check1.setText("");
               
         flag1=0;
        flag2=0;
        flag3=0;
        day=dayslist.getSelectedItem().toString();
        month=monthslist.getSelectedItem().toString();
        year=yearslist.getSelectedItem().toString();
        doctorname=doctorslist.getSelectedItem().toString();
        doctorspecialization=specializationlist.getSelectedItem().toString();
        time=timelist.getSelectedItem().toString();
        if(day.equals("day")||month.equals("month")||year.equals("year")||time.equals("select")){
            reservation.setText("please choose an appointment ");
            flag1=1;
        }
        if(doctorname.equals("doctor's name")){
            check1.setText("please choose your doctor ");
            flag2=1;
            
        }
         if(doctorspecialization.equals("select")){
            check.setText("please choose the doctor's specialization ");
            flag3=1;
            
        }
        
        
        
    
    }
    private String generatecode(){
        String url="jdbc:derby://localhost:1527/HOSPITALRESERVATIONSYSTEMDATABASE";
        String user="HAGER";
        String password="HAGER";
       String check="";
       
        try{
            Connection con = DriverManager.getConnection(url, user, password);
            String a="SELECT RESERVATIONCODE FROM HAGER.APPOINTMENTS";
           // System.out.println("connected");
           Statement st= con.createStatement();
           ResultSet rs= null;
           rs=st.executeQuery(a);
           while(rs.next()){
             check=  rs.getString("RESERVATIONCODE");
               
           }
           rs.close();
           st.close();
           con.close();
         
        }
        catch(SQLException e) {
            
            System.out.println("error");
        }
        int h= Integer.parseInt(check);
        h=h+1;
        code =h+"";
        
        return code;
    
    }
     private void reservation(){
        checkappointment();
        String url="jdbc:derby://localhost:1527/HOSPITALRESERVATIONSYSTEMDATABASE";
        String user="HAGER";
        String password="HAGER";
        code=generatecode();
        if(flag1==0&&flag2==0&&flag3==0&&flag4==0){
            try{
            Connection con = DriverManager.getConnection(url, user, password);
            
            String sql= "INSERT INTO HAGER.APPOINTMENTS(DOCTORUSERNAME,PATIENTUSERNAME,RESERVATIONYEAR,RESERVATIONMONTH,RESERVATIONDAY,RESERVATIONCODE,RESERVATIONTIME,RESERVATIONATTENDANCE) VALUES('"+doctorusername+"','"+patientusername+"','"+year+"','"+month+"','"+day+"','"+code+"','"+time+"','false')";
            Statement st=con.createStatement();
            st.executeUpdate(sql);
            st.close();
            con.close();

        }
        catch(SQLException e) {

            System.out.println("error");
        }
        reservation.setText("you have been successfully reserved");
        reservation2.setText("your reservation code is"+code);
        reservation3.setText("your appointment is at "+day+"/"+month+"/"+year+" at "+"time"+time);
        
        }
    
    }
    private void checkappointment(){
        checkdata();
       String url="jdbc:derby://localhost:1527/HOSPITALRESERVATIONSYSTEMDATABASE";
        String user="HAGER";
        String password="HAGER";
       
       String checkday="";
       String checkmonth="";
       String checkyear="";
       String checktime="";
       String checkdoctor="";
        doctorusername="";
        String checkdoctorusername="";
        flag4=0;
       
       if(flag1==0&&flag2==0&&flag3==0){
        try{
            Connection con = DriverManager.getConnection(url, user, password);
            String s="SELECT DOCTORUSERNAME FROM HAGER.DOCTOR WHERE DOCTORSPECIALIZATION = '"+ doctorspecialization+"' AND DOCTORNAME ='"+doctorname+"'";
           // System.out.println("connected");
           Statement st= con.createStatement();
           ResultSet rs= null;
           rs=st.executeQuery(s);
           while(rs.next()){
             doctorusername=  rs.getString("DOCTORUSERNAME");
               
           }
           rs.close();
           st.close();
           con.close();
         
        }
        catch(SQLException e) {
            
            System.out.println("error");
        }}
       if(flag1==0&&flag2==0&&flag3==0){
        try{
            Connection con = DriverManager.getConnection(url, user, password);
            String hh="SELECT * FROM HAGER.APPOINTMENTS";
           
           Statement st= con.createStatement();
           ResultSet rs= null;
           rs=st.executeQuery(hh);
           while(rs.next()){
             checkdoctorusername=  rs.getString("DOCTORUSERNAME");
             checkday=  rs.getString("RESERVATIONDAY");
             checkmonth=  rs.getString("RESERVATIONMONTH");
             checkyear=  rs.getString("RESERVATIONYEAR");
             checktime=  rs.getString("RESERVATIONTIME");
             if(checkdoctorusername.equals(doctorusername)&&checkday.equals(day)&&checkmonth.equals(month)&&checkyear.equals(year)&&checktime.equals(time)){
                 flag4=1;
                 reservation.setText("this appointment isn't avaliable, please choose another one");
             
             }
             
               
           }
           rs.close();
           st.close();
           con.close();
         
        }
        catch(SQLException e) {
            
            System.out.println("error");
        }}
       
    
    
    }
    private void monthslistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthslistActionPerformed
        // TODO add your handling code here:
        if(monthslist.getSelectedIndex()==1||monthslist.getSelectedIndex()==3||monthslist.getSelectedIndex()==5||monthslist.getSelectedIndex()==7||monthslist.getSelectedIndex()==8||monthslist.getSelectedIndex()==10||monthslist.getSelectedIndex()==12||monthslist.getSelectedIndex()==0){
            dayslist.removeAllItems();
            dayslist.addItem("day");
            dayslist.addItem("1");
            dayslist.addItem("2");
            dayslist.addItem("3");
            dayslist.addItem("4");
            dayslist.addItem("5");
            dayslist.addItem("6");
            dayslist.addItem("7");
            dayslist.addItem("8");
            dayslist.addItem("9");
            dayslist.addItem("10");
            dayslist.addItem("11");
            dayslist.addItem("12");
            dayslist.addItem("13");
            dayslist.addItem("14");
            dayslist.addItem("15");
            dayslist.addItem("16");
            dayslist.addItem("17");
            dayslist.addItem("18");
            dayslist.addItem("19");
            dayslist.addItem("20");
            dayslist.addItem("21");
            dayslist.addItem("22");
            dayslist.addItem("23");
            dayslist.addItem("24");
            dayslist.addItem("25");
            dayslist.addItem("26");
            dayslist.addItem("27");
            dayslist.addItem("28");
            dayslist.addItem("29");
            dayslist.addItem("30");
            dayslist.addItem("31");    
        }
        if(monthslist.getSelectedIndex()==2){
            dayslist.removeAllItems();
            dayslist.addItem("day");
            dayslist.addItem("1");
            dayslist.addItem("2");
            dayslist.addItem("3");
            dayslist.addItem("4");
            dayslist.addItem("5");
            dayslist.addItem("6");
            dayslist.addItem("7");
            dayslist.addItem("8");
            dayslist.addItem("9");
            dayslist.addItem("10");
            dayslist.addItem("11");
            dayslist.addItem("12");
            dayslist.addItem("13");
            dayslist.addItem("14");
            dayslist.addItem("15");
            dayslist.addItem("16");
            dayslist.addItem("17");
            dayslist.addItem("18");
            dayslist.addItem("19");
            dayslist.addItem("20");
            dayslist.addItem("21");
            dayslist.addItem("22");
            dayslist.addItem("23");
            dayslist.addItem("24");
            dayslist.addItem("25");
            dayslist.addItem("26");
            dayslist.addItem("27");
            dayslist.addItem("28");
            dayslist.addItem("29");
        } 
        if(monthslist.getSelectedIndex()==4||monthslist.getSelectedIndex()==6||monthslist.getSelectedIndex()==9||monthslist.getSelectedIndex()==11){
            dayslist.removeAllItems();
            dayslist.addItem("day");
            dayslist.addItem("1");
            dayslist.addItem("2");
            dayslist.addItem("3");
            dayslist.addItem("4");
            dayslist.addItem("5");
            dayslist.addItem("6");
            dayslist.addItem("7");
            dayslist.addItem("8");
            dayslist.addItem("9");
            dayslist.addItem("10");
            dayslist.addItem("11");
            dayslist.addItem("12");
            dayslist.addItem("13");
            dayslist.addItem("14");
            dayslist.addItem("15");
            dayslist.addItem("16");
            dayslist.addItem("17");
            dayslist.addItem("18");
            dayslist.addItem("19");
            dayslist.addItem("20");
            dayslist.addItem("21");
            dayslist.addItem("22");
            dayslist.addItem("23");
            dayslist.addItem("24");
            dayslist.addItem("25");
            dayslist.addItem("26");
            dayslist.addItem("27");
            dayslist.addItem("28");
            dayslist.addItem("29");
            dayslist.addItem("30");
        } 
    }//GEN-LAST:event_monthslistActionPerformed

    private void specializationlistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specializationlistActionPerformed
        // TODO add your handling code here:
        
        doctorspecialization=specializationlist.getSelectedItem().toString();
        doctorslist.removeAllItems();
        doctorslist.addItem("select");
        
         
       String url="jdbc:derby://localhost:1527/HOSPITALRESERVATIONSYSTEMDATABASE";
        String user="HAGER";
        String password="HAGER";
       String n="";
       
        try{
            Connection con = DriverManager.getConnection(url, user, password);
            String s="SELECT DOCTORNAME FROM HAGER.DOCTOR WHERE DOCTORSPECIALIZATION = '"+doctorspecialization+"'";
           // System.out.println("connected");
           Statement st= con.createStatement();
           ResultSet rs= null;
           rs=st.executeQuery(s);
           while(rs.next()){
             n=  rs.getString("DOCTORNAME");
             doctorslist.addItem(n);
               System.out.println(check);
           }
           rs.close();
           st.close();
           con.close();
         
        }
        catch(SQLException e) {
            
            System.out.println("error");
        }
            
        
        
    }//GEN-LAST:event_specializationlistActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        reservation();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        homepage p = new homepage();
        p.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        patientpage p = new patientpage(patientusername);
        p.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(reservationpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(reservationpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(reservationpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(reservationpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new reservationpage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel check;
    private javax.swing.JLabel check1;
    private javax.swing.JComboBox<String> dayslist;
    private javax.swing.JComboBox<String> doctorslist;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> monthslist;
    private javax.swing.JLabel reservation;
    private javax.swing.JLabel reservation2;
    private javax.swing.JLabel reservation3;
    private javax.swing.JComboBox<String> specializationlist;
    private javax.swing.JComboBox<String> timelist;
    private javax.swing.JComboBox<String> yearslist;
    // End of variables declaration//GEN-END:variables
}
