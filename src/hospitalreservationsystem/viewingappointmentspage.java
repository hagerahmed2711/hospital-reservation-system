/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospitalreservationsystem;
import java.sql.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class viewingappointmentspage extends javax.swing.JFrame {

    /**
     * Creates new form viewingappointmentspage
     */
    private static String patientname="";
     private static int flag1=0;
      private static int flag2=0;
     private static String patientage="";
      private static String patientaddress="";
       private static String patientphonenumber="";
        private static String patientgender="";
         private static String reservationcode="";
          private static String birthyear="";
           private static String patientusername="";
           private static String day="";
           private static String year="";
           private static String month="";
           private static String time="";
           private static String reservationattendance="";
           private static String appointment="";
           private static String attendance="";
           private static boolean attended=false;
    public viewingappointmentspage() {
        initComponents();
    }
    private static String doctorusername="";
     public viewingappointmentspage(String u) {
        initComponents();
        doctorusername=u;
        
    }
      

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hospitalreservationsystem/doctor-leading-medical-blurry-hospital-background-133236824[890].jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "patient's name", "patient's age", "patient's phone number", "patient's address", "reservation code", "patient's gender", "appointment", "attended"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jButton1.setText("view appointments");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jButton2.setText("confirm and return to doctor page");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1075, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(jButton1)
                        .addGap(181, 181, 181)
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        flag1=1;
        if(flag2==0){
        viewappointments();
        }
        flag2=1;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (flag1==1){
        updateattendanceinformation();
        doctorpage p= new doctorpage(doctorusername);
        p.setVisible(true);
        this.setVisible(false);}
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    private void viewappointments(){
        String url="jdbc:derby://localhost:1527/HOSPITALRESERVATIONSYSTEMDATABASE";
        String user="HAGER";
        String password="HAGER";
       
       
        try{
            Connection con = DriverManager.getConnection(url, user, password);
            String s="SELECT * FROM HAGER.APPOINTMENTS WHERE DOCTORUSERNAME ='"+doctorusername+"' ";
           // System.out.println("connected");
           Statement st= con.createStatement();
           ResultSet rs= null;
           rs=st.executeQuery(s);
           int i=0;
           while(rs.next()){
              day =  rs.getString("RESERVATIONDAY");
               patientusername =  rs.getString("PATIENTUSERNAME");
                year =  rs.getString("RESERVATIONYEAR");
                 month =  rs.getString("RESERVATIONMONTH");
                 time =  rs.getString("RESERVATIONTIME");
                 reservationcode =  rs.getString("RESERVATIONCODE");
                 reservationattendance =  rs.getString("RESERVATIONATTENDANCE");
                 if(reservationattendance.equals("true")){
                     attended=true;
                 
                 }
                if(reservationattendance.equals("false")){
                     attended=false;
                 
                 }
                 appointment=day+"/"+month+"/"+year+"at"+time;
                 
                 if(reservationattendance.equals("false")){
                     getpatientinfo(patientusername);
                 String table[]={patientname,patientage,patientphonenumber,patientaddress,reservationcode,patientgender,appointment}; 
                 DefaultTableModel h=(DefaultTableModel)jTable1.getModel(); 
                 h.addRow(table);
                 h.setValueAt(attended, i, 7);
                 i++;
           }
              
           }
           rs.close();
           st.close();
           con.close();
         
        }
        catch(SQLException e) {
            
            System.out.println("error");
        }
    
    }
    private void getpatientinfo(String h){
         String url="jdbc:derby://localhost:1527/HOSPITALRESERVATIONSYSTEMDATABASE";
        String user="HAGER";
        String password="HAGER";
        patientusername=h;
       
       
        try{
            Connection con = DriverManager.getConnection(url, user, password);
            String s="SELECT * FROM HAGER.PATIENT WHERE PATIENTUSERNAME ='"+patientusername+"' ";
           // System.out.println("connected");
           Statement st= con.createStatement();
           ResultSet rs= null;
           rs=st.executeQuery(s);
           int i=0;
           while(rs.next()){
              patientaddress =  rs.getString("PATIENTADDRESS");
               patientname =  rs.getString("PATIENTNAME");
                patientphonenumber =  rs.getString("PATIENTPHONENUMBER");
                 birthyear =  rs.getString("PATIENTBIRTHYEAR");
                 calcage(birthyear);
                 patientgender =  rs.getString("PATIENTGENDER");
                 
                 
           }
           rs.close();
           st.close();
           con.close();
         
        }
        catch(SQLException e) {
            
            System.out.println("error");
        }
        
    
    }
   private void updateattendanceinformation(){
        
        String url="jdbc:derby://localhost:1527/HOSPITALRESERVATIONSYSTEMDATABASE";
        String user="HAGER";
        String password="HAGER";
        int i=0;
        DefaultTableModel h=(DefaultTableModel)jTable1.getModel(); 
        for(i=0;i<h.getRowCount();i++){
          reservationattendance=  h.getValueAt(i, 7)+"";
          reservationcode=h.getValueAt(i, 4)+"";
        String sql1="UPDATE HAGER.APPOINTMENTS SET RESERVATIONATTENDANCE='"+reservationattendance+"'WHERE RESERVATIONCODE='"+reservationcode+"'";
         
       try{
            Connection con = DriverManager.getConnection(url, user, password);
            Statement st=con.createStatement();
            st.executeUpdate(sql1);
            
            st.close();
            con.close();

        }
        catch(SQLException e) {

            System.out.println("error");
        }
        
        }
    
    }
    private void calcage(String h){
        int a= Integer.parseInt(h);
        int m=2022-a;
        patientage=m+"";
    
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewingappointmentspage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewingappointmentspage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewingappointmentspage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewingappointmentspage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new viewingappointmentspage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
